version: '3.8'

services:
  db:
    image: postgres:15
    container_name: zta_postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./db/init_tables.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  pep:
    build: ./pep
    container_name: zta_pep
    depends_on:
      - db
    ports:
      - "8002:8002"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}

  pdp:
    build: ./pdp
    container_name: zta_pdp
    depends_on:
      - db
      - splunk
    ports:
      - "8001:8001"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - SPLUNK_HOST=${SPLUNK_HOST}
      - SPLUNK_PORT=${SPLUNK_PORT}
      - SPLUNK_TOKEN=${SPLUNK_HEC_TOKEN}

  iptables:
    build: ./iptables
    container_name: zta_iptables
    network_mode: host  # Usa la rete del sistema host per permettere l'accesso a iptables
    cap_add:
      - NET_ADMIN  # Aggiungi capacità amministrative di rete per iptables
    volumes:
      - ./iptables/iptables.rules:/iptables.rules  # Monta il file delle regole
    privileged: true  # Abilita la modalità privilegiata per poter usare iptables
    command: ["sh", "-c", "iptables-restore < /iptables.rules && tail -f /dev/null"]

  squid:
    image: sameersbn/squid
    container_name: zta_squid
    volumes:
      - ./squid/squid.conf:/etc/squid/squid.conf
    ports:
      - "3128:3128"
    networks:
      - default

  snort:
    image: fike/snort
    container_name: zta_snort
    cap_add:
      - NET_ADMIN
    volumes:
      - ./snort/snort.conf:/etc/snort/snort.conf
    command: ["snort", "-c", "/etc/snort/snort.conf", "-A", "console"]
    network_mode: "bridge"

  splunk:
    image: splunk/splunk:latest
    container_name: zta_splunk
    environment:
      - SPLUNK_START_ARGS=--accept-license
      - SPLUNK_PASSWORD=${SPLUNK_PASSWORD}
    ports:
      - "8000:8000"
      - "8088:8088"
    volumes:
      - ./splunk:/opt/splunk/etc
