version: "3.8"

services:
  db:
    image: postgres:15
    container_name: zta_postgres
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "zta"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./db/init_tables.sql:/docker-entrypoint-initdb.d/init_tables.sql
    ports:
      - "5433:5432"

  pep:
    build: ./pep
    container_name: zta_pep
    depends_on:
      - pdp     
    ports:
      - "8002:8002"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}

  pdp:
    build: ./pdp
    container_name: zta_pdp
    depends_on:
      - splunk
    ports:
      - "8001:8001"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - SPLUNK_HOST=${SPLUNK_HOST}
      - SPLUNK_PORT=${SPLUNK_PORT}
      - SPLUNK_TOKEN=${SPLUNK_HEC_TOKEN}

  iptables:
    build: ./iptables
    container_name: zta_iptables
    cap_add:
      - NET_ADMIN
    volumes:
      - ./iptables/iptables.rules:/iptables.rules
    networks:
      - network_aziendale
      - network_vpn
      - network_domestica
      - network_pubblica
    privileged: true
    command: ["sh", "-c", "iptables-restore < /iptables.rules && tail -f /dev/null"]
    depends_on:
      db:  # iptables deve dipendere dal db, per garantirne l'avvio prima
          condition: service_healthy

  squid:
    image: sameersbn/squid
    container_name: zta_squid
    volumes:
      - ./squid/squid.conf:/etc/squid/squid.conf
      - ./squid/log:/var/log/squid
    ports:
      - "3129:3128"
    networks:
      - network_aziendale
      - network_vpn
      - network_domestica
      - network_pubblica
    depends_on:
      - iptables

  snort:
    build: ./snort  
    container_name: zta_snort
    cap_add:
      - NET_ADMIN  # Permette al contenitore di configurare la rete
    networks:
      - network_aziendale
      - network_vpn
      - network_domestica
      - network_pubblica
    ports:
      - "5140:5140/udp"  # Esporta la porta per gli avvisi
    volumes:
      - ./snort/log:/var/log/snort
    command: ["snort", "-A", "console", "-c", "/etc/snort/snort.conf", "-i", "eth0"] 
    depends_on: 
      - squid            

  splunk:
    image: splunk/splunk:latest
    container_name: zta_splunk
    environment:
      - SPLUNK_START_ARGS=--accept-license
      - SPLUNK_PASSWORD=${SPLUNK_PASSWORD}
    ports:
      - "8000:8000"
      - "8088:8088"
    volumes:
      - splunk_data:/opt/splunk  # Docker-managed volume, non scrive localmente
    depends_on:
      - snort

volumes:
  splunk_data:

networks:
  network_aziendale:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.1.0/24

  network_vpn:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.2.0/24

  network_domestica:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.3.0/24

  network_pubblica:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.4.0/24

